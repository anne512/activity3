{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"menu\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Menu List\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"product-list\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"product-info\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"cart\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Shopping Cart\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  class: \"cart-info\"\n};\nconst _hoisted_13 = {\n  class: \"quantity-controls\"\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"onUpdate:modelValue\", \"onInput\"];\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Product Menu \"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.menuRows, (row, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"row\",\n      key: index\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, product => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: product.id,\n        class: \"product card\"\n      }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, _toDisplayString(product.name) + \" - ₱\" + _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"button\", {\n        onClick: $event => $options.addToCart(product),\n        class: \"add-to-cart-button\"\n      }, \"Add to Cart\", 8 /* PROPS */, _hoisted_7)])])]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Shopping Cart \"), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, $data.cart.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"Cart is empty\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cart, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"cart-item\"\n    }, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"p\", null, _toDisplayString(item.product.name) + \" - ₱\" + _toDisplayString(item.product.price), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n      onClick: $event => $options.decrementQuantity(index),\n      class: \"quantity-button\"\n    }, \"-\", 8 /* PROPS */, _hoisted_14), _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.quantity = $event,\n      min: \"1\",\n      class: \"quantity-input\",\n      onInput: $event => $options.updateQuantity(index)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_15), [[_vModelText, item.quantity]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.incrementQuantity(index),\n      class: \"quantity-button\"\n    }, \"+\", 8 /* PROPS */, _hoisted_16)]), _createElementVNode(\"button\", {\n      class: \"remove-button\",\n      onClick: $event => $options.removeFromCart(index)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_17)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"p\", null, \"Total: ₱\" + _toDisplayString($options.totalPrice), 1 /* TEXT */)]))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$options","menuRows","row","index","product","id","_hoisted_5","_hoisted_6","_toDisplayString","name","price","onClick","$event","addToCart","_hoisted_7","_hoisted_8","_hoisted_9","$data","cart","length","_hoisted_10","_hoisted_11","item","_hoisted_12","_hoisted_13","decrementQuantity","_hoisted_14","type","quantity","min","onInput","updateQuantity","_hoisted_15","incrementQuantity","_hoisted_16","removeFromCart","_hoisted_17","totalPrice"],"sources":["C:\\Users\\User\\Tena\\activity3\\src\\components\\ShopCart.vue"],"sourcesContent":["Fix my add to cart button. Make a break line between product name and add to cart button. this 2 should be align center.\r\n\r\n<template>\r\n  <div class=\"container\">\r\n    <!-- Product Menu -->\r\n    <div class=\"menu\">\r\n      <h2>Menu List</h2>\r\n      <div class=\"product-list\">\r\n        <div class=\"row\" v-for=\"(row, index) in menuRows\" :key=\"index\">\r\n          <div v-for=\"product in row\" :key=\"product.id\" class=\"product card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"product-info\">\r\n                <p>{{ product.name }} - ₱{{ product.price }}</p>\r\n                <button @click=\"addToCart(product)\" class=\"add-to-cart-button\">Add to Cart</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Shopping Cart -->\r\n    <div class=\"cart\">\r\n      <h2>Shopping Cart</h2>\r\n      <div v-if=\"cart.length === 0\">Cart is empty</div>\r\n      <div v-else>\r\n        <div v-for=\"(item, index) in cart\" :key=\"index\" class=\"cart-item\">\r\n          <div class=\"cart-info\">\r\n            <p>{{ item.product.name }} - ₱{{ item.product.price }}</p>\r\n            <div class=\"quantity-controls\">\r\n              <button @click=\"decrementQuantity(index)\" class=\"quantity-button\">-</button>\r\n              <input type=\"number\" v-model=\"item.quantity\" min=\"1\" class=\"quantity-input\" @input=\"updateQuantity(index)\">\r\n              <button @click=\"incrementQuantity(index)\" class=\"quantity-button\">+</button>\r\n            </div>\r\n            <button class=\"remove-button\" @click=\"removeFromCart(index)\">Remove</button>\r\n          </div>\r\n        </div>\r\n        <p>Total: ₱{{ totalPrice }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [\r\n        { id: 1, name: 'Black Coffee', price: 39 },\r\n        { id: 2, name: 'Espresso', price: 49 },\r\n        { id: 3, name: 'Iced Latte', price: 59 },\r\n        { id: 4, name: 'Americano', price: 69 },\r\n        { id: 5, name: 'Cappuccino', price: 79 },\r\n        { id: 6, name: 'Mocha', price: 89 },\r\n        { id: 7, name: 'Caramel Macchiato', price: 99 },\r\n        { id: 8, name: 'Matcha', price: 109 },\r\n        { id: 9, name: 'Cold Brew', price: 119 },\r\n        { id: 10, name: 'Frappe', price: 129 },\r\n      ],\r\n      cart: []\r\n    };\r\n  },\r\n  computed: {\r\n    totalPrice() {\r\n      return this.cart.reduce((total, item) => {\r\n        return total + (item.product.price * item.quantity);\r\n      }, 0);\r\n    },\r\n    menuRows() {\r\n      const rows = [];\r\n      for (let i = 0; i < this.products.length; i += 3) {\r\n        rows.push(this.products.slice(i, i + 3));\r\n      }\r\n      return rows;\r\n    }\r\n  },\r\n  methods: {\r\n    addToCart(product) {\r\n      const found = this.cart.find(item => item.product.id === product.id);\r\n      if (found) {\r\n        found.quantity++;\r\n      } else {\r\n        this.cart.push({ product: product, quantity: 1 });\r\n      }\r\n    },\r\n    removeFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n    },\r\n    updateQuantity(index) {\r\n      const quantity = parseInt(this.cart[index].quantity);\r\n      if (quantity <= 0) {\r\n        this.cart.splice(index, 1);\r\n      }\r\n    },\r\n    incrementQuantity(index) {\r\n      this.cart[index].quantity++;\r\n    },\r\n    decrementQuantity(index) {\r\n      if (this.cart[index].quantity > 1) {\r\n        this.cart[index].quantity--;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* .container {\r\n  display: flex;\r\n} */\r\n\r\n.menu {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.cart {\r\n  flex: 1;\r\n  margin-left: 20px;\r\n}\r\n\r\n/* .product-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n} */\r\n\r\n.row {\r\n  display: flex;\r\n}\r\n\r\n.product {\r\n  flex: 0 0 calc(33.33% - 20px);\r\n  margin: 10px;\r\n}\r\n\r\n.card {\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n}\r\n\r\n.card-body {\r\n  padding: 10px;\r\n}\r\n\r\n.product-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.add-to-cart-button {\r\n  background-color: green;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.add-to-cart-button:hover {\r\n  background-color: darkgreen;\r\n}\r\n\r\n.cart-item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.cart-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.quantity-controls {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.quantity-button {\r\n  background-color: #007bff; /* Blue color for quantity buttons */\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px;\r\n  text-align: center;\r\n}\r\n\r\n.remove-button {\r\n  background-color: red;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-button:hover {\r\n  background-color: darkred;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}