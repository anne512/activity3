{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MenuList = _resolveComponent(\"MenuList\");\n  const _component_ShoppingCart = _resolveComponent(\"ShoppingCart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Product Listings \"), _createVNode(_component_MenuList, {\n    products: $data.products,\n    onAddToCart: $options.addToCart\n  }, null, 8 /* PROPS */, [\"products\", \"onAddToCart\"]), _createCommentVNode(\" Shopping Cart \"), _createVNode(_component_ShoppingCart, {\n    cart: $data.cart,\n    totalPrice: $options.totalPrice,\n    onRemoveFromCart: $options.removeFromCart,\n    onUpdateQuantity: $options.updateQuantity\n  }, null, 8 /* PROPS */, [\"cart\", \"totalPrice\", \"onRemoveFromCart\", \"onUpdateQuantity\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_MenuList","products","$data","onAddToCart","$options","addToCart","_component_ShoppingCart","cart","totalPrice","onRemoveFromCart","removeFromCart","onUpdateQuantity","updateQuantity"],"sources":["C:\\Users\\User\\Tena\\activity3\\src\\components\\ShopCart.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <!-- Product Listings -->\r\n      <MenuList :products=\"products\" @add-to-cart=\"addToCart\" />\r\n  \r\n      <!-- Shopping Cart -->\r\n      <ShoppingCart :cart=\"cart\" :totalPrice=\"totalPrice\" @remove-from-cart=\"removeFromCart\" @update-quantity=\"updateQuantity\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import MenuList from './components/MenuList.vue'\r\n  import ShoppingCart from './components/ShoppingCart.vue'\r\n  \r\n  export default {\r\n    components: {\r\n      MenuList,\r\n      ShoppingCart\r\n    },\r\n    data() {\r\n      return {\r\n        products: [\r\n          { id: 1, name: 'Black Coffee', price: 39 },\r\n          { id: 2, name: 'Espresso', price: 49 },\r\n          { id: 3, name: 'Iced Latte', price: 59 },\r\n          { id: 4, name: 'Americano', price: 69 },\r\n          { id: 5, name: 'Cappuccino', price: 79 },\r\n          { id: 6, name: 'Mocha', price: 89 },\r\n          { id: 7, name: 'Caramel Macchiato', price: 99 },\r\n          { id: 8, name: 'Matcha', price: 109 },\r\n          { id: 9, name: 'Cold Brew', price: 119 },\r\n          { id: 10, name: 'Frappe', price: 129 },\r\n        ],\r\n        cart: []\r\n      };\r\n    },\r\n    computed: {\r\n      totalPrice() {\r\n        return this.cart.reduce((total, item) => {\r\n          return total + item.product.price * item.quantity;\r\n        }, 0);\r\n      }\r\n    },\r\n    methods: {\r\n      addToCart(product) {\r\n        const found = this.cart.find(item => item.product.id === product.id);\r\n        if (found) {\r\n          found.quantity++;\r\n        } else {\r\n          this.cart.push({ product: product, quantity: 1 });\r\n        }\r\n      },\r\n      removeFromCart(index) {\r\n        this.cart.splice(index, 1);\r\n      },\r\n      updateQuantity(payload) {\r\n        const { index, quantity } = payload;\r\n        if (quantity <= 0) {\r\n          this.cart.splice(index, 1);\r\n        } else {\r\n          this.cart[index].quantity = quantity;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .container {\r\n    display: flex;\r\n  }\r\n  \r\n  /* You can adjust styles for MenuList and ShoppingCart components in their respective files */\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;;;;uBAAtBC,mBAAA,CAMM,OANNC,UAMM,GALJC,mBAAA,sBAAyB,EACzBC,YAAA,CAA0DC,mBAAA;IAA/CC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,WAAW,EAAEC,QAAA,CAAAC;wDAE7CP,mBAAA,mBAAsB,EACtBC,YAAA,CAA2HO,uBAAA;IAA5GC,IAAI,EAAEL,KAAA,CAAAK,IAAI;IAAGC,UAAU,EAAEJ,QAAA,CAAAI,UAAU;IAAGC,gBAAgB,EAAEL,QAAA,CAAAM,cAAc;IAAGC,gBAAe,EAAEP,QAAA,CAAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}