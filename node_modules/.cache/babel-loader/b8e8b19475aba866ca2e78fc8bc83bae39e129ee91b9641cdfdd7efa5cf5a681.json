{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-list\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"cart\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Shopping Cart\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onUpdate:modelValue\", \"onInput\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Product Listings \"), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: product.id,\n      class: \"product\"\n    }, [_createElementVNode(\"p\", null, _toDisplayString(product.name) + \" - ₱\" + _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.addToCart(product)\n    }, \"Add to Cart\", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Shopping Cart \"), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _ctx.cart.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"Cart is empty\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.cart, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"cart-item\"\n    }, [_createElementVNode(\"p\", null, _toDisplayString(item.product.name) + \" - ₱\" + _toDisplayString(item.product.price) + \" x \" + _toDisplayString(item.quantity), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.removeFromCart(index)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_7), _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.quantity = $event,\n      min: \"1\",\n      onInput: $event => _ctx.updateQuantity(index)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_8), [[_vModelText, item.quantity]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"p\", null, \"Total: ₱\" + _toDisplayString(_ctx.totalPrice), 1 /* TEXT */)]))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_createCommentVNode","_hoisted_1","_Fragment","_renderList","_ctx","products","product","id","_toDisplayString","name","price","onClick","$event","addToCart","_hoisted_2","_hoisted_3","_hoisted_4","cart","length","_hoisted_5","_hoisted_6","item","index","quantity","removeFromCart","_hoisted_7","type","min","onInput","updateQuantity","_hoisted_8","totalPrice"],"sources":["C:\\Users\\User\\Tena\\activity3\\src\\components\\ShopCart.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <!-- Product Listings -->\r\n      <div class=\"product-list\">\r\n        <div v-for=\"product in products\" :key=\"product.id\" class=\"product\">\r\n          <p>{{ product.name }} - ₱{{ product.price }}</p>\r\n          <button @click=\"addToCart(product)\">Add to Cart</button>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Shopping Cart -->\r\n      <div class=\"cart\">\r\n        <h2>Shopping Cart</h2>\r\n        <div v-if=\"cart.length === 0\">Cart is empty</div>\r\n        <div v-else>\r\n          <div v-for=\"(item, index) in cart\" :key=\"index\" class=\"cart-item\">\r\n            <p>{{ item.product.name }} - ₱{{ item.product.price }} x {{ item.quantity }}</p>\r\n            <button @click=\"removeFromCart(index)\">Remove</button>\r\n            <input type=\"number\" v-model=\"item.quantity\" min=\"1\" @input=\"updateQuantity(index)\">\r\n          </div>\r\n          <p>Total: ₱{{ totalPrice }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  <h2>Coffee Menu </h2>\r\n  export default {\r\n    data() {\r\n      return {\r\n        products: [\r\n        { id: 1, name: 'Black Coffee', price: 39 },\r\n          { id: 2, name: 'Espresso', price: 49 },\r\n          { id: 3, name: 'Iced Latte', price: 59 },\r\n          { id: 4, name: 'Americano', price: 69 },\r\n          { id: 5, name: 'Cappuccino', price: 79 },\r\n          { id: 6, name: 'Mocha', price: 89 },\r\n          { id: 7, name: 'Caramel Macchiato', price: 99 },\r\n          { id: 8, name: 'Matcha', price: 109 },\r\n          { id: 9, name: 'Cold Brew', price: 119 },\r\n          { id: 10, name: 'Frappe', price: 129 },\r\n        ],\r\n        cart: []\r\n      };\r\n    },\r\n    computed: {\r\n      totalPrice() {\r\n        return this.cart.reduce((total, item) => {\r\n          return total + (item.product.price * item.quantity);\r\n        }, 0);\r\n      }\r\n    },\r\n    methods: {\r\n      addToCart(product) {\r\n        const found = this.cart.find(item => item.product.id === product.id);\r\n        if (found) {\r\n          found.quantity++;\r\n        } else {\r\n          this.cart.push({ product: product, quantity: 1 });\r\n        }\r\n      },\r\n      removeFromCart(index) {\r\n        this.cart.splice(index, 1);\r\n      },\r\n      updateQuantity(index) {\r\n        const quantity = parseInt(this.cart[index].quantity);\r\n        if (quantity <= 0) {\r\n          this.cart.splice(index, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .product-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .product {\r\n    margin: 10px;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  .cart {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .cart-item {\r\n    margin-bottom: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAGWA,KAAK,EAAC;AAAc;mBAH/B;;EAWWA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAsB,YAAlB,eAAa;;EAZzBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;mBAAA;mBAAA;;uBACIC,mBAAA,CAsBM,cArBJC,mBAAA,sBAAyB,EACzBH,mBAAA,CAKM,OALNI,UAKM,I,kBAJJF,mBAAA,CAGMG,SAAA,QAPdC,WAAA,CAI+BC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAnBP,mBAAA,CAGM;MAH4BD,GAAG,EAAEQ,OAAO,CAACC,EAAE;MAAEX,KAAK,EAAC;QACvDC,mBAAA,CAAgD,WAAAW,gBAAA,CAA1CF,OAAO,CAACG,IAAI,IAAG,MAAI,GAAAD,gBAAA,CAAGF,OAAO,CAACI,KAAK,kBACzCb,mBAAA,CAAwD;MAA/Cc,OAAK,EAAAC,MAAA,IAAER,IAAA,CAAAS,SAAS,CAACP,OAAO;OAAG,aAAW,iBANzDQ,UAAA,E;oCAUMd,mBAAA,mBAAsB,EACtBH,mBAAA,CAWM,OAXNkB,UAWM,GAVJC,UAAsB,EACXZ,IAAA,CAAAa,IAAI,CAACC,MAAM,U,cAAtBnB,mBAAA,CAAiD,OAbzDoB,UAAA,EAasC,eAAa,M,cAC3CpB,mBAAA,CAOM,OArBdqB,UAAA,I,kBAeUrB,mBAAA,CAIMG,SAAA,QAnBhBC,WAAA,CAeuCC,IAAA,CAAAa,IAAI,EAf3C,CAeuBI,IAAI,EAAEC,KAAK;yBAAxBvB,mBAAA,CAIM;MAJ8BD,GAAG,EAAEwB,KAAK;MAAE1B,KAAK,EAAC;QACpDC,mBAAA,CAAgF,WAAAW,gBAAA,CAA1Ea,IAAI,CAACf,OAAO,CAACG,IAAI,IAAG,MAAI,GAAAD,gBAAA,CAAGa,IAAI,CAACf,OAAO,CAACI,KAAK,IAAG,KAAG,GAAAF,gBAAA,CAAGa,IAAI,CAACE,QAAQ,kBACzE1B,mBAAA,CAAsD;MAA7Cc,OAAK,EAAAC,MAAA,IAAER,IAAA,CAAAoB,cAAc,CAACF,KAAK;OAAG,QAAM,iBAjBzDG,UAAA,G,gBAkBY5B,mBAAA,CAAoF;MAA7E6B,IAAI,EAAC,QAAQ;MAlBhC,uBAAAd,MAAA,IAkB0CS,IAAI,CAACE,QAAQ,GAAAX,MAAA;MAAEe,GAAG,EAAC,GAAG;MAAEC,OAAK,EAAAhB,MAAA,IAAER,IAAA,CAAAyB,cAAc,CAACP,KAAK;6CAlB7FQ,UAAA,I,cAkB0CT,IAAI,CAACE,QAAQ,E;kCAE7C1B,mBAAA,CAA+B,WAA5B,UAAQ,GAAAW,gBAAA,CAAGJ,IAAA,CAAA2B,UAAU,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}